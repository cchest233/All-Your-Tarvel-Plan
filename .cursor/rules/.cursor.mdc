---
description: 
globs: 
alwaysApply: true
---
# Cursor Editor Rules

## Project Structure
- backend: Python (Flask or Django) with RAG implementation
- frontend: Web interface (HTML/CSS/JS, potentially React/Vue)
- extension: Future Google Chrome Extension

## Code Style
- Python: Follow PEP 8
  - 4 spaces for indentation
  - 88 character line limit
  - Google style docstrings
- JavaScript:
  - 2 spaces for indentation
  - ES6+ features preferred
  - Single quotes for strings

## Naming Conventions
- Python:
  - snake_case for variables, functions, methods
  - PascalCase for classes
  - UPPER_SNAKE_CASE for constants
- JavaScript:
  - camelCase for variables, functions
  - PascalCase for components, classes

## Import Structure
- Python:
  - Standard library imports first
  - Third-party imports second
  - Local application imports third
  - Alphabetical within each group

## Comments
- Meaningful comments for complex logic
- Docstrings for all public functions/methods/classes
- TODO/FIXME tags for temporary solutions

## Path Conventions
- API endpoints: /api/v1/resource-name
- Relative imports preferred within modules

## Test Patterns
- Test files named test_*.py
- pytest fixtures in conftest.py

## Extensions to Install
- Python: Black, isort, flake8, mypy
- JavaScript: ESLint, Prettier

## VS Code/Cursor Settings
```json
{
  "editor.formatOnSave": true,
  "editor.rulers": [88],
  "editor.tabSize": 4,
  "python.linting.enabled": true,
  "python.linting.flake8Enabled": true,
  "python.formatting.provider": "black",
  "javascript.format.enable": true
}
``` 